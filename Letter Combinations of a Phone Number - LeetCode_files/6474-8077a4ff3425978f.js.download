"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6474],{86474:(n,e,t)=>{t.d(e,{$Fr:()=>eH,AXo:()=>eU,BIm:()=>S,BNR:()=>ex,BQd:()=>b,BZT:()=>eh,BxX:()=>L,CEB:()=>eK,CWR:()=>nS,E8A:()=>nl,Elb:()=>nd,Elk:()=>eE,Fa1:()=>nz,Hm6:()=>n0,HnI:()=>M,I89:()=>np,IP6:()=>n9,Icc:()=>q,Ilc:()=>nU,J$G:()=>eP,Jkq:()=>x,Jwx:()=>e$,K2T:()=>n8,KPb:()=>f,Kdj:()=>ni,KxT:()=>nf,L7i:()=>nw,LMU:()=>eR,LXo:()=>ns,LZG:()=>nx,LdK:()=>nb,NFG:()=>F,NJK:()=>eQ,NUb:()=>nr,NvX:()=>U,OPL:()=>eB,OYx:()=>nK,OhT:()=>eD,P7z:()=>n6,Pr3:()=>I,Qf9:()=>nA,QkH:()=>nV,Qmq:()=>eW,Qop:()=>nh,QrL:()=>nm,QsZ:()=>eG,RB7:()=>R,RRD:()=>nZ,Rb_:()=>eN,SVV:()=>X,S_f:()=>u,TJg:()=>es,U98:()=>m,UCQ:()=>Q,UDL:()=>nJ,UYC:()=>nP,UfF:()=>nW,ViO:()=>A,W3g:()=>ng,X3l:()=>ed,XGh:()=>er,Xay:()=>n4,Y4k:()=>eg,YT2:()=>z,Ydw:()=>J,YtT:()=>l,Z8y:()=>n2,Zop:()=>eq,ZyV:()=>K,Zzj:()=>nM,_4s:()=>n_,_IV:()=>nj,_Vk:()=>B,_yr:()=>eO,a$3:()=>eA,aBZ:()=>N,aBc:()=>nk,aGf:()=>n3,aKU:()=>nc,alG:()=>eb,am4:()=>n1,anS:()=>nG,aqh:()=>eJ,b8m:()=>nY,bH9:()=>nC,bWC:()=>_,bj2:()=>nQ,boZ:()=>eV,c38:()=>na,c3x:()=>Y,cNk:()=>nu,ckT:()=>T,d2:()=>V,d7L:()=>nn,dE$:()=>ep,dFR:()=>O,dL3:()=>Z,e5O:()=>ee,ebK:()=>ec,g5X:()=>c,gOW:()=>a,ga8:()=>eC,hRV:()=>n$,hfu:()=>eT,i89:()=>v,iuC:()=>y,j45:()=>g,j8g:()=>d,jad:()=>et,jfv:()=>ej,kEk:()=>nq,kgh:()=>ei,lH9:()=>ew,m8T:()=>en,mVn:()=>H,mig:()=>P,mii:()=>em,n3m:()=>eu,n_5:()=>C,oiF:()=>W,oxQ:()=>nT,pA8:()=>k,pLg:()=>n5,pMw:()=>nR,pS6:()=>eI,pUJ:()=>h,qJU:()=>nD,qRz:()=>eF,qtf:()=>eM,rBT:()=>$,rPH:()=>j,rXt:()=>eS,sOg:()=>el,t8J:()=>nL,tNu:()=>eL,tXs:()=>D,tal:()=>s,tp3:()=>nI,uD3:()=>p,unQ:()=>ea,v8h:()=>eY,vBz:()=>w,vlf:()=>ny,wuI:()=>e_,x43:()=>E,xGJ:()=>ev,xje:()=>nv,yNb:()=>G,yTX:()=>nH,yzd:()=>nF,z5Y:()=>nX,zTu:()=>n7,zXu:()=>eo,zaT:()=>ey});var o=t(9421),r=t(59538);function i(n,e,t,o){return async()=>n.request({document:e,variables:t,requestHeaders:o})}var s=function(n){return n.CompanyListNotAvailable="COMPANY_LIST_NOT_AVAILABLE",n.ListIsPrivate="LIST_IS_PRIVATE",n.NoSuchList="NO_SUCH_LIST",n}({}),a=function(n){return n.Carousel="CAROUSEL",n.Tiled="TILED",n}({}),u=function(n){return n.Free="FREE",n.Premium="PREMIUM",n.VideoPremium="VIDEO_PREMIUM",n}({}),d=function(n){return n.Checking="CHECKING",n.Deleted="DELETED",n.Draft="DRAFT",n.Muted="MUTED",n.Offline="OFFLINE",n.Pending="PENDING",n.Prepublish="PREPUBLISH",n.Published="PUBLISHED",n.Removed="REMOVED",n.UpdateRequested="UPDATE_REQUESTED",n}({}),l=function(n){return n.MemoryComplexity="MEMORY_COMPLEXITY",n.TimeComplexity="TIME_COMPLEXITY",n}({}),m=function(n){return n.ThumbsDown="THUMBS_DOWN",n.Upvote="UPVOTE",n}({}),c=function(n){return n.NotStarted="NOT_STARTED",n.Ongoing="ONGOING",n.Past="PAST",n}({}),g=function(n){return n.LeastSubmit="LEAST_SUBMIT",n.MostSubmit="MOST_SUBMIT",n.NewToOld="NEW_TO_OLD",n}({}),p=function(n){return n.Ended="ENDED",n.Ongoing="ONGOING",n.Pending="PENDING",n}({}),y=function(n){return n.Other="OTHER",n.Signed="SIGNED",n.Signing="SIGNING",n.Terminated="TERMINATED",n}({}),I=function(n){return n.AllStatus="ALL_STATUS",n.Available="AVAILABLE",n.Expired="EXPIRED",n.Used="USED",n}({}),S=function(n){return n.Easy="EASY",n.Hard="HARD",n.Medium="MEDIUM",n}({}),E=function(n){return n.Other="OTHER",n.Regular="REGULAR",n.Special="SPECIAL",n}({}),A=function(n){return n.Bachelor="BACHELOR",n.Doctor="DOCTOR",n.HighSchool="HIGH_SCHOOL",n.Master="MASTER",n.Other="OTHER",n.Profession="PROFESSION",n}({}),T=function(n){return n.Article="ARTICLE",n.Community="COMMUNITY",n.CommunityQa="COMMUNITY_QA",n.CommunityTopic="COMMUNITY_TOPIC",n.Leetbook="LEETBOOK",n}({}),$=function(n){return n.NoNeedToUnlock="NO_NEED_TO_UNLOCK",n.UserAlreadyUnlocked="USER_ALREADY_UNLOCKED",n.UserCannotUnlock="USER_CANNOT_UNLOCK",n.UserCanUnlock="USER_CAN_UNLOCK",n}({}),v=function(n){return n.CompanyFavorite="COMPANY_FAVORITE",n.Normal="NORMAL",n.SmartList="SMART_LIST",n}({}),f=function(n){return n.Is="IS",n.IsNot="IS_NOT",n}({}),b=function(n){return n.Female="FEMALE",n.Male="MALE",n.Other="OTHER",n.Private="PRIVATE",n}({}),k=function(n){return n.Company="COMPANY",n.Custom="CUSTOM",n.Random="RANDOM",n}({}),C=function(n){return n.Campus="CAMPUS",n.Experienced="EXPERIENCED",n.Internship="INTERNSHIP",n}({}),R=function(n){return n.Ignored="IGNORED",n.LookAt="LOOK_AT",n.Other="OTHER",n.Preparation="PREPARATION",n}({}),U=function(n){return n.Foreign="FOREIGN",n.Internal="INTERNAL",n}({}),P=function(n){return n.AnnualMedal="ANNUAL_MEDAL",n.ContestGroupMedal="CONTEST_GROUP_MEDAL",n.DailyQuestionMedal="DAILY_QUESTION_MEDAL",n.LevelMedal="LEVEL_MEDAL",n.Other="OTHER",n.StudyPlanMedal="STUDY_PLAN_MEDAL",n.SubmissionMedal="SUBMISSION_MEDAL",n}({}),N=function(n){return n.Attempted="ATTEMPTED",n.Solved="SOLVED",n.ToDo="TO_DO",n}({}),D=function(n){return n.ColumnsReview="COLUMNS_REVIEW",n.ManagementEntry="MANAGEMENT_ENTRY",n}({}),O=function(n){return n.NotPremium="NOT_PREMIUM",n.Premium="PREMIUM",n}({}),h=function(n){return n.Solved="SOLVED",n.Submission="SUBMISSION",n}({}),L=function(n){return n.LastSubmittedAt="LAST_SUBMITTED_AT",n.NumSubmitted="NUM_SUBMITTED",n.QuestionFrontendId="QUESTION_FRONTEND_ID",n}({}),M=function(n){return n.Attempted="ATTEMPTED",n.Solved="SOLVED",n}({}),w=function(n){return n.Ckeditor="CKEDITOR",n.Markdown="MARKDOWN",n}({}),x=function(n){return n.All="ALL",n.Any="ANY",n}({}),B=function(n){return n.AcRate="AC_RATE",n.ContestPoint="CONTEST_POINT",n.Custom="CUSTOM",n.Difficulty="DIFFICULTY",n.Frequency="FREQUENCY",n.FrontendId="FRONTEND_ID",n.LastSubmittedTime="LAST_SUBMITTED_TIME",n.SearchScore="SEARCH_SCORE",n}({}),F=function(n){return n.Awesome="AWESOME",n.Confused="CONFUSED",n.Heart="HEART",n.ThumbsDown="THUMBS_DOWN",n.Upvote="UPVOTE",n}({}),q=function(n){return n.Abuse="ABUSE",n.Advertising="ADVERTISING",n.All="ALL",n.Fake="FAKE",n.Illegal="ILLEGAL",n.NonEnglish="NON_ENGLISH",n.Other="OTHER",n.Politics="POLITICS",n.Sexual="SEXUAL",n.Terrorism="TERRORISM",n.Violent="VIOLENT",n}({}),_=function(n){return n.Advantage="ADVANTAGE",n.Basic="BASIC",n.Edu="EDU",n.Intention="INTENTION",n.Project="PROJECT",n.Skill="SKILL",n.WorkExperience="WORK_EXPERIENCE",n}({}),j=function(n){return n.Bachelor="BACHELOR",n.Doctor="DOCTOR",n.HighSchool="HIGH_SCHOOL",n.JuniorHighSchool="JUNIOR_HIGH_SCHOOL",n.Master="MASTER",n.Mba="MBA",n.Other="OTHER",n.Profession="PROFESSION",n.TechnicalSecondary="TECHNICAL_SECONDARY",n}({}),K=function(n){return n.FileResume="FILE_RESUME",n.OnlineResume="ONLINE_RESUME",n}({}),W=function(n){return n.Ascending="ASCENDING",n.Descending="DESCENDING",n}({}),J=function(n){return n.Ascending="ASCENDING",n.Descending="DESCENDING",n}({}),V=function(n){return n.Approved="APPROVED",n.Pending="PENDING",n.Rejected="REJECTED",n}({}),H=function(n){return n.Ac="AC",n.Ce="CE",n.Ie="IE",n.Mle="MLE",n.Ole="OLE",n.Re="RE",n.Tle="TLE",n.To="TO",n.Wa="WA",n}({}),Q=function(n){return n.AdditionalTopic="ADDITIONAL_TOPIC",n.Company="COMPANY",n.Language="LANGUAGE",n.Topic="TOPIC",n}({}),G=function(n){return n.Advanced="ADVANCED",n.Beginner="BEGINNER",n.Expert="EXPERT",n.Intermediate="INTERMEDIATE",n}({}),Y=function(n){return n.All="ALL",n.Interview="INTERVIEW",n.Study="STUDY",n}({}),X=function(n){return n.Female="FEMALE",n.Male="MALE",n.Other="OTHER",n}({}),z=function(n){return n.Other="OTHER",n.Professional="PROFESSIONAL",n.Student="STUDENT",n}({}),Z=function(n){return n.StudentCard="STUDENT_CARD",n.TeacherCard="TEACHER_CARD",n}({}),nn=function(n){return n.Approved="APPROVED",n.Pending="PENDING",n.Rejected="REJECTED",n.TranscodeFailed="TRANSCODE_FAILED",n.Transcoding="TRANSCODING",n}({});let ne="\n    fragment resume on ResumeNode {\n  uploadedAt\n  fileUrl\n  uuid\n  originFileName\n}\n    ",nt=("\n    fragment qaQuestion on QAQuestionNode {\n  ipRegion\n  uuid\n  slug\n  title\n  thumbnail\n  summary\n  content\n  slateValue\n  sunk\n  pinned\n  pinnedGlobally\n  byLeetcode\n  isRecommended\n  isRecommendedGlobally\n  subscribed\n  hitCount\n  numAnswers\n  numPeopleInvolved\n  numSubscribed\n  createdAt\n  updatedAt\n  status\n  identifier\n  resourceType\n  articleType\n  alwaysShow\n  alwaysExpand\n  score\n  favoriteCount\n  isMyFavorite\n  isAnonymous\n  canEdit\n  reactionType\n  atQuestionTitleSlug\n  blockComments\n  reactionsV2 {\n    count\n    reactionType\n  }\n  tags {\n    name\n    nameTranslated\n    slug\n    imgUrl\n    tagType\n  }\n  subject {\n    slug\n    title\n  }\n  contentAuthor {\n    ...contentAuthor\n  }\n  realAuthor {\n    ...realAuthor\n  }\n}\n    ".concat("\n    fragment contentAuthor on ArticleAuthor {\n  username\n  userSlug\n  realName\n  avatar\n}\n    ","\n").concat("\n    fragment realAuthor on UserNode {\n  username\n  profile {\n    userSlug\n    realName\n    userAvatar\n  }\n}\n    "),"\n    fragment userCoupon on UserCouponNode {\n  id\n  code\n  startAt\n  expiredAt\n  coupon {\n    id\n    name\n    event\n    minExpense\n    value\n    description\n  }\n}\n    "),no="\n    fragment leetbookBriefNode on LeetbookBriefBookNode {\n  id\n  slug\n  title\n  coverImg\n  description\n  ownedType\n  isFavorite\n  totalStudied\n  visibility\n  author {\n    realName\n    title\n    bio\n    avatar\n    userSlug\n  }\n  chapterNum\n  pageNum\n  premiumOnlyPageNum\n  progress {\n    numCompleted\n    numCompletedPremium\n    accessedAt\n  }\n  productInfo {\n    allowBorrow\n    premiumOnly\n    product {\n      id\n      slug\n      price\n      hasPremiumPrice\n      premiumPrice\n      discounts {\n        id\n        availableAfter\n        availableBefore\n        price\n      }\n    }\n  }\n  forSaleAt\n  lastNewPageForSaleAt\n  commonTags {\n    nameTranslated\n    name\n    slug\n  }\n}\n    ",nr=(n,e,t,r)=>(0,o.I)(["advertisementAdsByPage",e],i(n,"\n    query advertisementAdsByPage($pageSlug: String!, $customType: AdCustomTypeEnum, $customId: ID) {\n  advertisementAdsByPage(\n    pageSlug: $pageSlug\n    customType: $customType\n    customId: $customId\n  ) {\n    ads {\n      ... on AdvertisementItemNode {\n        name\n        title\n        image\n        link\n        pinned\n        isTagShown\n        subtitle\n        extraInfo\n        baiduWidth\n        baiduHeight\n        baiduAdId\n        baiduAdHide\n      }\n    }\n    position {\n      name\n      nameSlug\n      displayStyle\n    }\n  }\n}\n    ",e,r),t);nr.getKey=n=>["advertisementAdsByPage",n];let ni=(n,e,t)=>(0,r.n)(["addCardToFavorites"],e=>i(n,"\n    mutation addCardToFavorites($id: ID!) {\n  interviewAddCardToFavorites(cardId: $id) {\n    card {\n      id\n      isFavorite\n    }\n  }\n}\n    ",e,t)(),e),ns=(n,e,t,r)=>(0,o.I)(["commonHotCities",e],i(n,"\n    query commonHotCities($lang: String!, $locationType: LocationTypeEnum) {\n  commonHotCities(lang: $lang, locationType: $locationType) {\n    city\n    country\n    province\n  }\n}\n    ",e,r),t);ns.getKey=n=>["commonHotCities",n];let na=(n,e,t,r)=>(0,o.I)(["commonJobCategories",e],i(n,"\n    query commonJobCategories($lang: String!) {\n  commonJobCategories(lang: $lang) {\n    id\n    name\n  }\n}\n    ",e,r),t);na.getKey=n=>["commonJobCategories",n];let nu=(n,e,t,r)=>(0,o.I)(["commonJobItems",e],i(n,"\n    query commonJobItems($lang: String!, $categoryId: ID!) {\n  commonJobItems(lang: $lang, categoryId: $categoryId) {\n    id\n    name\n    category {\n      id\n      name\n    }\n  }\n}\n    ",e,r),t);nu.getKey=n=>["commonJobItems",n];let nd=(n,e,t,r)=>(0,o.I)(["companyInterviewCard",e],i(n,"\n    query companyInterviewCard($companySlug: String!) {\n  interviewCard(companySlug: $companySlug) {\n    id\n    isFavorite\n    isPremiumOnly\n    privilegeExpiresAt\n    jobsCompany {\n      name\n      jobPostingNum\n      isVerified\n      description\n      logo\n      logoPath\n      postingTypeCounts {\n        count\n        postingType\n      }\n      industryDisplay\n      scaleDisplay\n      financingStageDisplay\n      website\n      legalName\n    }\n  }\n}\n    ",e,r),t);nd.getKey=n=>["companyInterviewCard",n];let nl=(n,e,t)=>(0,r.n)(["interviewStart"],e=>i(n,"\n    mutation interviewStart($id: ID!) {\n  interviewStart(cardId: $id) {\n    created\n    startedSession {\n      status\n    }\n  }\n}\n    ",e,t)(),e),nm=(n,e,t)=>(0,r.n)(["removeCardFromFavorites"],e=>i(n,"\n    mutation removeCardFromFavorites($id: ID!) {\n  interviewRemoveCardFromFavorites(cardId: $id) {\n    card {\n      id\n      isFavorite\n    }\n  }\n}\n    ",e,t)(),e),nc=(n,e,t,r)=>(0,o.I)(void 0===e?["todayRecord"]:["todayRecord",e],i(n,"\n    query todayRecord {\n  todayRecord {\n    userStatus\n    comboTimes\n  }\n}\n    ",e,r),t);nc.getKey=n=>void 0===n?["todayRecord"]:["todayRecord",n];let ng=(n,e,t,r)=>(0,o.I)(void 0===e?["feature"]:["feature",e],i(n,"\n    query feature {\n  feature {\n    questionTranslation\n    subscription\n    signUp\n    discuss\n    mockInterview\n    contest\n    store\n    book\n    chinaProblemDiscuss\n    socialProviders\n    studentFooter\n    cnJobs\n    interview\n    enableLsp\n    enableWs\n    enableDebugger\n    enableDebuggerAdmin\n    enableDarkMode\n    tasks\n    leetbook\n    enableEduDiscount\n  }\n}\n    ",e,r),t);ng.getKey=n=>void 0===n?["feature"]:["feature",n];let np=(n,e,t)=>(0,r.n)(["applyForAJobV2"],e=>i(n,"\n    mutation applyForAJobV2($jobId: ID!, $resumeType: ResumeOriginTypeEnum!, $fileUrl: String, $fileName: String, $email: String, $phone: String, $userRealName: String, $countryCode: String, $overrideProfileResume: Boolean) {\n  __typename\n  applyForAJobV2(\n    data: {jobId: $jobId, resumeType: $resumeType, fileUrl: $fileUrl, fileName: $fileName, email: $email, countryCode: $countryCode, overrideProfileResume: $overrideProfileResume, phone: $phone, userRealName: $userRealName}\n  ) {\n    ok\n    errors\n    application {\n      email\n      graduationTime\n      id\n    }\n  }\n}\n    ",e,t)(),e),ny=(n,e,t)=>(0,r.n)(["jobsIncreaseBrowse"],e=>i(n,"\n    mutation jobsIncreaseBrowse($uuid: UUID!) {\n  jobsIncreaseBrowse(uuid: $uuid) {\n    ok\n  }\n}\n    ",e,t)(),e),nI=(n,e,t)=>(0,r.n)(["toggleSubscribeTag"],e=>i(n,"\n    mutation toggleSubscribeTag($subscribed: Boolean!, $tagSlug: String!) {\n  toggleSubscribeTag(subscribed: $subscribed, tagSlug: $tagSlug) {\n    ok\n  }\n}\n    ",e,t)(),e),nS=(n,e,t,r)=>(0,o.I)(["jobsOfficialPostingDetail",e],i(n,"\n    query jobsOfficialPostingDetail($uuid: UUID!) {\n  detail: jobsOfficialPostingDetail(uuid: $uuid) {\n    advertisement {\n      image\n      isTagShown\n      name\n      link\n      pinned\n      title\n    }\n    category {\n      canBeFiltered\n      canBeSelected\n      id\n      name\n      order\n      subCategories {\n        id\n        name\n        order\n      }\n    }\n    chinaCity\n    chinaCityDisplay\n    chinaProvinceDisplay\n    companyCardFavCount\n    companyCardId\n    companyCardIsFavorite\n    companyLogo\n    companyName\n    companySlug\n    description\n    displayTags {\n      displayType\n      imgUrl\n      link\n      title\n    }\n    educationDisplay\n    emails\n    financingStageDisplay\n    hasApplied\n    hasApplyQualification\n    industryDisplay\n    isHot\n    isRecommended\n    jobTags {\n      idHash\n      name\n      slug\n    }\n    legalName\n    location\n    modified\n    postingType\n    publishedAt\n    salaryDetailDisplay\n    salaryDisplay\n    salaryMax\n    salaryMin\n    salaryMonth\n    salaryNegotiable\n    scaleDisplay\n    shortlists {\n      config\n      expiresAt\n      name\n      slug\n    }\n    status\n    subCategory {\n      id\n      name\n      order\n    }\n    title\n    uuid\n    website\n    workExperienceDisplay\n  }\n}\n    ",e,r),t);nS.getKey=n=>["jobsOfficialPostingDetail",n];let nE="\n    query resumeUserResumes {\n  resumeUserResumes {\n    ...resume\n  }\n}\n    ".concat(ne),nA=(n,e,t,r)=>(0,o.I)(void 0===e?["resumeUserResumes"]:["resumeUserResumes",e],i(n,nE,e,r),t);nA.getKey=n=>void 0===n?["resumeUserResumes"]:["resumeUserResumes",n];let nT=(n,e,t,r)=>(0,o.I)(void 0===e?["userProfileOnlineResumeInfo"]:["userProfileOnlineResumeInfo",e],i(n,"\n    query userProfileOnlineResumeInfo {\n  userProfileOnlineResumeInfo {\n    completed\n    email\n    phone {\n      countryCode\n      phone\n    }\n    realName\n  }\n}\n    ",e,r),t);nT.getKey=n=>void 0===n?["userProfileOnlineResumeInfo"]:["userProfileOnlineResumeInfo",n];let n$=(n,e,t)=>(0,r.n)(["cancelOrderPayment"],e=>i(n,"\n    mutation cancelOrderPayment($orderId: String!, $userToken: String!) {\n  cancelOrder(orderId: $orderId, userToken: $userToken) {\n    ok\n  }\n}\n    ",e,t)(),e),nv=(n,e,t)=>(0,r.n)(["createOrder"],e=>i(n,"\n    mutation createOrder($data: CreateOrderAndPayInput!, $token: String!) {\n  createOrderAndPay(data: $data, userToken: $token) {\n    ok\n    error\n    orderId\n    chargeId\n    credential\n    chargeJsonObject\n    isPaid\n  }\n}\n    ",e,t)(),e),nf=(n,e,t,r)=>(0,o.I)(["orderStatus",e],i(n,"\n    query orderStatus($orderId: ID!) {\n  orderPaid(orderId: $orderId)\n}\n    ",e,r),t);nf.getKey=n=>["orderStatus",n];let nb=(n,e,t,r)=>(0,o.I)(["paymentUserStatus",e],i(n,"\n    query paymentUserStatus($token: String!) {\n  userStatusByToken(userToken: $token) {\n    profile {\n      username\n      profile {\n        realName\n        userAvatar\n        userSlug\n      }\n    }\n    userId\n    isPremium\n    premiumExpiredAt\n    premiumCreatedAt\n  }\n}\n    ",e,r),t);nb.getKey=n=>["paymentUserStatus",n];let nk=(n,e,t,r)=>(0,o.I)(void 0===e?["paymentUserToken"]:["paymentUserToken",e],i(n,"\n    query paymentUserToken {\n  myTokens {\n    paymentUserToken\n  }\n}\n    ",e,r),t);nk.getKey=n=>void 0===n?["paymentUserToken"]:["paymentUserToken",n];let nC=(n,e,t,r)=>(0,o.I)(["unpaidOrderByUserTokenAndProducts",e],i(n,"\n    query unpaidOrderByUserTokenAndProducts($productIdList: [ID]!, $userToken: String) {\n  unpaidOrderByUserAndProduct(\n    productIdList: $productIdList\n    userToken: $userToken\n  ) {\n    id\n    subject\n    totalPrice\n  }\n}\n    ",e,r),t);nC.getKey=n=>["unpaidOrderByUserTokenAndProducts",n];let nR=(n,e,t)=>(0,r.n)(["cancelPremiumSubscription"],e=>i(n,"\n    mutation cancelPremiumSubscription($contractId: String!, $userToken: String) {\n  subscriptionRescind(contractId: $contractId, userToken: $userToken) {\n    ok\n  }\n}\n    ",e,t)(),e),nU=(n,e,t)=>(0,r.n)(["eduApplyVerification"],e=>i(n,"\n    mutation eduApplyVerification($data: EduApplyVerificationInput!, $id: ID) {\n  eduApplyVerification(data: $data, id: $id) {\n    ok\n  }\n}\n    ",e,t)(),e),nP=(n,e,t,r)=>(0,o.I)(void 0===e?["eduVerificationResult"]:["eduVerificationResult",e],i(n,"\n    query eduVerificationResult($userToken: String) {\n  eduVerificationResult(userToken: $userToken) {\n    id\n    studentName\n    schoolId\n    schoolName\n    province\n    education\n    enrolledAt\n    graduateTime\n    studentNumber\n    materialType\n    materials\n    appliedAt\n    expiredAt\n    rejectReason\n    reviewStatus\n    premiumExpiredAt\n    topEducation\n    isPurchased\n  }\n}\n    ",e,r),t);nP.getKey=n=>void 0===n?["eduVerificationResult"]:["eduVerificationResult",n];let nN="\n    query allCoupons($statusType: CouponStatusType!, $userToken: String) {\n  userCoupons(statusType: $statusType, userToken: $userToken) {\n    ...userCoupon\n  }\n}\n    ".concat(nt),nD=(n,e,t,r)=>(0,o.I)(["allCoupons",e],i(n,nN,e,r),t);nD.getKey=n=>["allCoupons",n];let nO="\n    query couponsByProducts($productIds: [ID]!, $userToken: String) {\n  userCouponsByProducts(productIds: $productIds, userToken: $userToken) {\n    productId\n    userCoupons {\n      ...userCoupon\n    }\n  }\n}\n    ".concat(nt),nh=(n,e,t,r)=>(0,o.I)(["couponsByProducts",e],i(n,nO,e,r),t);nh.getKey=n=>["couponsByProducts",n];let nL=(n,e,t,r)=>(0,o.I)(void 0===e?["mySubscription"]:["mySubscription",e],i(n,"\n    query mySubscription($userToken: String) {\n  subscriptionMySignedContract(userToken: $userToken) {\n    id\n    plan {\n      id\n      details {\n        cycleDesc\n        endCycle\n        fromCycle\n        price\n        startCycle\n      }\n    }\n    signChannel\n    signedAt\n    terminatedAt\n    signExpiredTime\n    status\n    performTimes\n    nextCyclePrice\n  }\n}\n    ",e,r),t);nL.getKey=n=>void 0===n?["mySubscription"]:["mySubscription",n];let nM=(n,e,t)=>(0,r.n)(["subscriptionGenerateSignToken"],e=>i(n,"\n    mutation subscriptionGenerateSignToken($planId: String!, $signWay: String!, $sourceId: String, $sourceType: String, $userToken: String) {\n  subscriptionGenerateSignToken(\n    planId: $planId\n    signWay: $signWay\n    sourceId: $sourceId\n    sourceType: $sourceType\n    userToken: $userToken\n  ) {\n    signToken\n    expiredAt\n  }\n}\n    ",e,t)(),e),nw=(n,e,t,r)=>(0,o.I)(["wechatOpenId",e],i(n,"\n    query wechatOpenId($code: ID!) {\n  wechatAccessTokenInfo(code: $code) {\n    openid\n  }\n}\n    ",e,r),t);nw.getKey=n=>["wechatOpenId",n];let nx=(n,e,t,r)=>(0,o.I)(void 0===e?["problemsForMention"]:["problemsForMention",e],i(n,"\n    query problemsForMention($filters: QuestionListFilterInput) {\n  problems: problemsetQuestionList(filters: $filters) {\n    questions {\n      frontendQuestionId\n      title\n      titleCn\n      titleSlug\n      difficulty\n    }\n  }\n}\n    ",e,r),t);nx.getKey=n=>void 0===n?["problemsForMention"]:["problemsForMention",n];let nB="\n    mutation resumeAddResume($fileUrl: String!, $initAllowRecommended: Boolean!, $originFileName: String!) {\n  resumeAddResume(\n    fileUrl: $fileUrl\n    initAllowRecommended: $initAllowRecommended\n    originFileName: $originFileName\n  ) {\n    resume {\n      ...resume\n    }\n  }\n}\n    ".concat(ne),nF=(n,e,t)=>(0,r.n)(["resumeAddResume"],e=>i(n,nB,e,t)(),e),nq=(n,e,t)=>(0,r.n)(["resumeAddEducationRecord"],e=>i(n,"\n    mutation resumeAddEducationRecord($addedu: ResumeAddEducationRecordInput!) {\n  resumeAddEducationRecord(data: $addedu) {\n    ok\n  }\n}\n    ",e,t)(),e),n_=(n,e,t)=>(0,r.n)(["resumeAddJobIntention"],e=>i(n,"\n    mutation resumeAddJobIntention($newIntention: ResumeAddJobIntentionInput!) {\n  resumeAddJobIntention(data: $newIntention) {\n    ok\n  }\n}\n    ",e,t)(),e),nj=(n,e,t)=>(0,r.n)(["resumeAddProjectExperience"],e=>i(n,"\n    mutation resumeAddProjectExperience($addproj: ResumeAddProjectExperienceInput!) {\n  resumeAddProjectExperience(data: $addproj) {\n    ok\n  }\n}\n    ",e,t)(),e),nK=(n,e,t)=>(0,r.n)(["resumeAddWorkExperience"],e=>i(n,"\n    mutation resumeAddWorkExperience($workexp: ResumeAddWorkExperienceInput!) {\n  resumeAddWorkExperience(data: $workexp) {\n    ok\n  }\n}\n    ",e,t)(),e),nW=(n,e,t)=>(0,r.n)(["resumeDeleteResume"],e=>i(n,"\n    mutation resumeDeleteResume($uuid: ID!) {\n  resumeDeleteResume(uuid: $uuid) {\n    ok\n  }\n}\n    ",e,t)(),e),nJ=(n,e,t)=>(0,r.n)(["resumeDeleteEducationRecord"],e=>i(n,"\n    mutation resumeDeleteEducationRecord($recordId: ID!) {\n  resumeDeleteEducationRecord(recordId: $recordId) {\n    ok\n  }\n}\n    ",e,t)(),e),nV=(n,e,t)=>(0,r.n)(["resumeDeleteJobIntention"],e=>i(n,"\n    mutation resumeDeleteJobIntention($recordId: ID!) {\n  resumeDeleteJobIntention(recordId: $recordId) {\n    ok\n  }\n}\n    ",e,t)(),e),nH=(n,e,t)=>(0,r.n)(["resumeDeleteProjectExperience"],e=>i(n,"\n    mutation resumeDeleteProjectExperience($recordId: ID!) {\n  resumeDeleteProjectExperience(recordId: $recordId) {\n    ok\n  }\n}\n    ",e,t)(),e),nQ=(n,e,t)=>(0,r.n)(["resumeDeleteUserAvatar"],e=>i(n,"\n    mutation resumeDeleteUserAvatar {\n  resumeDeleteUserAvatar {\n    ok\n  }\n}\n    ",e,t)(),e),nG=(n,e,t)=>(0,r.n)(["resumeDeleteWorkExperience"],e=>i(n,"\n    mutation resumeDeleteWorkExperience($experienceId: ID!) {\n  resumeDeleteWorkExperience(experienceId: $experienceId) {\n    ok\n  }\n}\n    ",e,t)(),e),nY=(n,e,t)=>(0,r.n)(["resumeSetAcceptTelecommuting"],e=>i(n,"\n    mutation resumeSetAcceptTelecommuting($acceptTelecommuting: Boolean!) {\n  resumeSetAcceptTelecommuting(acceptTelecommuting: $acceptTelecommuting) {\n    ok\n  }\n}\n    ",e,t)(),e),nX=(n,e,t)=>(0,r.n)(["resumeUpdateUserAdvantage"],e=>i(n,"\n    mutation resumeUpdateUserAdvantage($editAdg: ResumeUpdateUserAdvantageInput!) {\n  resumeUpdateUserAdvantage(data: $editAdg) {\n    ok\n  }\n}\n    ",e,t)(),e),nz=(n,e,t)=>(0,r.n)(["resumeUpdateAllowRecommended"],e=>i(n,"\n    mutation resumeUpdateAllowRecommended($allowRecommended: Boolean!) {\n  resumeUpdateAllowRecommended(allowRecommended: $allowRecommended) {\n    allowRecommended\n  }\n}\n    ",e,t)(),e),nZ=(n,e,t)=>(0,r.n)(["resumeUpdateBasicInfo"],e=>i(n,"\n    mutation resumeUpdateBasicInfo($basicInfo: ResumeUpdateBasicInfoInput!) {\n  resumeUpdateBasicInfo(data: $basicInfo) {\n    ok\n  }\n}\n    ",e,t)(),e),n0=(n,e,t)=>(0,r.n)(["resumeCompleteIntention"],e=>i(n,"\n    mutation resumeCompleteIntention($intention: ResumeDataEnum!) {\n  resumeCompleteIntention(intention: $intention) {\n    ok\n  }\n}\n    ",e,t)(),e),n2=(n,e,t)=>(0,r.n)(["resumeEditEducationRecord"],e=>i(n,"\n    mutation resumeEditEducationRecord($editedu: ResumeEditEducationRecordInput!) {\n  resumeEditEducationRecord(data: $editedu) {\n    ok\n  }\n}\n    ",e,t)(),e),n8=(n,e,t)=>(0,r.n)(["resumeSetEmptyWorkExperience"],e=>i(n,"\n    mutation resumeSetEmptyWorkExperience {\n  resumeSetEmptyWorkExperience {\n    ok\n  }\n}\n    ",e,t)(),e),n3=(n,e,t)=>(0,r.n)(["resumeUpdateJobIntention"],e=>i(n,"\n    mutation resumeUpdateJobIntention($updIntention: ResumeUpdateJobIntentionInput!) {\n  resumeUpdateJobIntention(data: $updIntention) {\n    ok\n  }\n}\n    ",e,t)(),e),n4=(n,e,t)=>(0,r.n)(["resumeEditProjectExperience"],e=>i(n,"\n    mutation resumeEditProjectExperience($editproj: ResumeEditProjectExperienceInput!) {\n  resumeEditProjectExperience(data: $editproj) {\n    ok\n  }\n}\n    ",e,t)(),e),n9=(n,e,t)=>(0,r.n)(["resumeUpdateUserSkillTags"],e=>i(n,"\n    mutation resumeUpdateUserSkillTags($skillTagNames: [String!]!) {\n  resumeUpdateUserSkillTags(skillTagNames: $skillTagNames) {\n    ok\n  }\n}\n    ",e,t)(),e),n5=(n,e,t)=>(0,r.n)(["resumeUpdateUserAvatar"],e=>i(n,"\n    mutation resumeUpdateUserAvatar($avatar: String!) {\n  resumeUpdateUserAvatar(avatar: $avatar) {\n    ok\n  }\n}\n    ",e,t)(),e),n7=(n,e,t)=>(0,r.n)(["resumeEditWorkExperience"],e=>i(n,"\n    mutation resumeEditWorkExperience($editExp: ResumeEditWorkExperienceInput!) {\n  resumeEditWorkExperience(data: $editExp) {\n    ok\n  }\n}\n    ",e,t)(),e),n6=(n,e,t,r)=>(0,o.I)(void 0===e?["resumeAllowRecommended"]:["resumeAllowRecommended",e],i(n,"\n    query resumeAllowRecommended {\n  resumeAllowRecommended\n}\n    ",e,r),t);n6.getKey=n=>void 0===n?["resumeAllowRecommended"]:["resumeAllowRecommended",n];let n1=(n,e,t,r)=>(0,o.I)(void 0===e?["resumeUserEduInfo"]:["resumeUserEduInfo",e],i(n,"\n    query resumeUserEduInfo {\n  resumeUserEduInfo {\n    eduHistory {\n      description\n      id\n      school {\n        id\n        name\n        logo\n      }\n      major {\n        id\n        name\n      }\n      admission\n      joinedAt\n      graduationDate\n      degree\n    }\n  }\n}\n    ",e,r),t);n1.getKey=n=>void 0===n?["resumeUserEduInfo"]:["resumeUserEduInfo",n];let en=(n,e,t,r)=>(0,o.I)(void 0===e?["resumeUserInfo"]:["resumeUserInfo",e],i(n,"\n    query resumeUserInfo {\n  resumeUserInfo {\n    useDefaultAvatar\n    aboutMe\n    skillTags\n    user {\n      userSlug\n      userAvatar\n      realName\n    }\n    urls\n    email\n    countryCode\n    phone\n    gender\n    github\n    realName\n    birthday\n    location {\n      country\n      province\n      city\n      overseasCity\n    }\n    workedAt\n    notWorking\n    occupation\n    jobSeekingStatus\n    acceptTelecommuting\n  }\n}\n    ",e,r),t);en.getKey=n=>void 0===n?["resumeUserInfo"]:["resumeUserInfo",n];let ee=(n,e,t,r)=>(0,o.I)(void 0===e?["resumeUserJobIntentions"]:["resumeUserJobIntentions",e],i(n,"\n    query resumeUserJobIntentions {\n  resumeUserJobIntentions {\n    intentions {\n      id\n      salaryMin\n      salaryMax\n      salaryCoefficient\n      location {\n        city\n        country\n        province\n        overseasCity\n      }\n      job {\n        id\n        name\n      }\n    }\n    jobSeekingStatus\n    acceptTelecommuting\n    occupation\n  }\n}\n    ",e,r),t);ee.getKey=n=>void 0===n?["resumeUserJobIntentions"]:["resumeUserJobIntentions",n];let et=(n,e,t,r)=>(0,o.I)(void 0===e?["resumeUserProjectExperience"]:["resumeUserProjectExperience",e],i(n,"\n    query resumeUserProjectExperience {\n  resumeUserProjectExperience {\n    user {\n      userSlug\n      userAvatar\n      realName\n    }\n    projects {\n      id\n      urls\n      name\n      isInternship\n      toPresent\n      description\n      endedAt\n      startedAt\n      orgName\n    }\n  }\n}\n    ",e,r),t);et.getKey=n=>void 0===n?["resumeUserProjectExperience"]:["resumeUserProjectExperience",n];let eo=(n,e,t,r)=>(0,o.I)(void 0===e?["resumeUserStats"]:["resumeUserStats",e],i(n,"\n    query resumeUserStats {\n  resumeUserStats {\n    completedPercent\n    completedTasks\n  }\n}\n    ",e,r),t);eo.getKey=n=>void 0===n?["resumeUserStats"]:["resumeUserStats",n];let er=(n,e,t,r)=>(0,o.I)(void 0===e?["resumeUserWorkExperience"]:["resumeUserWorkExperience",e],i(n,"\n    query resumeUserWorkExperience {\n  resumeUserWorkExperience {\n    workExperiences {\n      description\n      id\n      job {\n        name\n        id\n      }\n      company {\n        id\n        name\n        logo\n      }\n      endedAt\n      joinedAt\n      toPresent\n      isInternship\n    }\n  }\n}\n    ",e,r),t);er.getKey=n=>void 0===n?["resumeUserWorkExperience"]:["resumeUserWorkExperience",n];let ei=(n,e,t,r)=>(0,o.I)(["contestDetailPage",e],i(n,"\n    query contestDetailPage($contestSlug: String!) {\n  contestDetailPage(contestSlug: $contestSlug) {\n    startTime\n    duration\n    titleSlug\n    title\n    titleCn\n    description\n    descriptionCn\n    descriptionStyle\n    discussUrl\n    cardImg\n    cardImgApp\n    isVirtual\n    isRegistered\n    isRegisteredTwice\n    registerUserNum\n  }\n}\n    ",e,r),t);ei.getKey=n=>["contestDetailPage",n];let es=(n,e,t)=>(0,r.n)(["contestReplySurvey"],e=>i(n,"\n    mutation contestReplySurvey($answer: JSONString!, $answerForCsv: JSONString!, $contestSlug: String!, $surveyId: ID!) {\n  contestReplySurvey(\n    answer: $answer\n    answerForCsv: $answerForCsv\n    contestSlug: $contestSlug\n    surveyId: $surveyId\n  ) {\n    ok\n  }\n}\n    ",e,t)(),e),ea=(n,e,t)=>(0,r.n)(["managementAddOrEditContest"],e=>i(n,"\n    mutation managementAddOrEditContest($id: ID, $data: ManagementAddOrEditContestInput!) {\n  managementAddOrEditContest(id: $id, data: $data) {\n    ok\n  }\n}\n    ",e,t)(),e),eu=(n,e,t,r)=>(0,o.I)(["managementContestAdminLogs",e],i(n,"\n    query managementContestAdminLogs($contestId: Int!, $limit: Int!, $skip: Int!) {\n  managementContestAdminLogs(contestId: $contestId, limit: $limit, skip: $skip) {\n    operationType\n    operateUserName\n    createdAt\n  }\n}\n    ",e,r),t);eu.getKey=n=>["managementContestAdminLogs",n];let ed=(n,e,t,r)=>(0,o.I)(["companies",e],i(n,"\n    query companies($search: String!) {\n  commonTags(query: $search, tagType: COMPANY) {\n    id\n    imgUrl\n    name\n    slug\n    nameTranslated\n    numSubscribed\n    subscribed\n  }\n}\n    ",e,r),t);ed.getKey=n=>["companies",n];let el=(n,e,t)=>(0,r.n)(["userProfileDeleteUserAvatar"],e=>i(n,"\n    mutation userProfileDeleteUserAvatar {\n  userProfileDeleteUserAvatar {\n    ok\n  }\n}\n    ",e,t)(),e),em=(n,e,t,r)=>(0,o.I)(["commonSearchedJobs",e],i(n,"\n    query commonSearchedJobs($search: String!, $lang: String) {\n  commonSearchedJobs(keyword: $search, lang: $lang) {\n    id\n    name\n  }\n}\n    ",e,r),t);em.getKey=n=>["commonSearchedJobs",n];let ec=(n,e,t,r)=>(0,o.I)(["commonSearchedMajors",e],i(n,"\n    query commonSearchedMajors($search: String!, $lang: String) {\n  commonSearchedMajors(keyword: $search, lang: $lang) {\n    id\n    name\n  }\n}\n    ",e,r),t);ec.getKey=n=>["commonSearchedMajors",n];let eg=(n,e,t,r)=>(0,o.I)(["schoolSearchByName",e],i(n,"\n    query schoolSearchByName($search: String!) {\n  schoolSearchByName(schoolName: $search) {\n    id\n    schoolId\n    name\n    logo\n  }\n}\n    ",e,r),t);eg.getKey=n=>["schoolSearchByName",n];let ep=(n,e,t,r)=>(0,o.I)(void 0===e?["calendarSubmitRecord"]:["calendarSubmitRecord",e],i(n,"\n    query calendarSubmitRecord {\n  calendarSubmitRecord {\n    dailySubmitStreakCount\n    dailyQuestionStreakCount\n    monthlyAcCount\n  }\n}\n    ",e,r),t);ep.getKey=n=>void 0===n?["calendarSubmitRecord"]:["calendarSubmitRecord",n];let ey=(n,e,t,r)=>(0,o.I)(void 0===e?["homePageFeeds"]:["homePageFeeds",e],i(n,"\n    query homePageFeeds($channelId: Int, $nextPage: Int, $offset: Int) {\n  homeFeedProblems(channelId: $channelId, offset: $offset) {\n    contentType\n    offset\n    problemSlug\n    problemTitle\n    recommendationReason\n    solutions {\n      authorAvatarUrl\n      authorName\n      authorSlug\n      slug\n      summary\n      title\n      id\n    }\n  }\n  homeFeedCompanies(channelId: $channelId, nextPage: $nextPage) {\n    nextPage\n    contentType\n    companies {\n      name\n      slug\n      logoUrl\n      popularity\n      trending\n    }\n  }\n}\n    ",e,r),t);ey.getKey=n=>void 0===n?["homePageFeeds"]:["homePageFeeds",n];let eI=(n,e,t)=>(0,r.n)(["qaAddFavQuestion"],e=>i(n,"\n    mutation qaAddFavQuestion($uuid: ID!) {\n  qaAddFavQuestion(questionId: $uuid) {\n    ok\n  }\n}\n    ",e,t)(),e),eS=(n,e,t)=>(0,r.n)(["qaAddQuestionReaction"],e=>i(n,"\n    mutation qaAddQuestionReaction($articleId: ID!, $reactionType: ReactionTypeEnum!) {\n  columnsAddReaction(articleId: $articleId, reactionType: $reactionType) {\n    ok\n    article {\n      ... on QAQuestionNode {\n        uuid\n        reactionType\n        reactionsV2 {\n          reactionType\n          count\n        }\n      }\n    }\n  }\n}\n    ",e,t)(),e),eE=(n,e,t)=>(0,r.n)(["qaRemoveFavQuestion"],e=>i(n,"\n    mutation qaRemoveFavQuestion($uuid: ID!) {\n  qaRemoveFavQuestion(questionId: $uuid) {\n    ok\n  }\n}\n    ",e,t)(),e),eA=(n,e,t)=>(0,r.n)(["qaRemoveQuestionReaction"],e=>i(n,"\n    mutation qaRemoveQuestionReaction($articleId: ID!) {\n  columnsRemoveReaction(articleId: $articleId) {\n    ok\n    article {\n      ... on QAQuestionNode {\n        uuid\n        reactionType\n        reactionsV2 {\n          reactionType\n          count\n        }\n      }\n    }\n  }\n}\n    ",e,t)(),e),eT=(n,e,t,r)=>(0,o.I)(void 0===e?["leetbookAdsSubjectBooks"]:["leetbookAdsSubjectBooks",e],i(n,"\n    query leetbookAdsSubjectBooks {\n  leetbookAdsSubjectBooks {\n    id\n    slug\n    title\n    coverImg\n    description\n    totalStudied\n    recommendation\n    author {\n      title\n      bio\n      realName\n      avatar\n      userSlug\n    }\n    chapterNum\n    pageNum\n    progress {\n      numCompleted\n      numCompletedPremium\n      accessedAt\n    }\n    productInfo {\n      premiumOnly\n      allowBorrow\n      product {\n        id\n        slug\n        price\n        premiumPrice\n        discounts {\n          id\n          availableAfter\n          availableBefore\n          price\n        }\n      }\n    }\n    forSaleAt\n    lastNewPageForSaleAt\n    ownedType\n    commonTags {\n      nameTranslated\n      name\n      slug\n    }\n  }\n}\n    ",e,r),t);eT.getKey=n=>void 0===n?["leetbookAdsSubjectBooks"]:["leetbookAdsSubjectBooks",n];let e$=(n,e,t,r)=>(0,o.I)(void 0===e?["leetbookCategories"]:["leetbookCategories",e],i(n,"\n    query leetbookCategories {\n  leetbookCategories {\n    id\n    name\n    subcategories {\n      bookIds\n      id\n      name\n    }\n  }\n}\n    ",e,r),t);e$.getKey=n=>void 0===n?["leetbookCategories"]:["leetbookCategories",n];let ev=(n,e,t,r)=>(0,o.I)(void 0===e?["leetbookContinuousReadingDays"]:["leetbookContinuousReadingDays",e],i(n,"\n    query leetbookContinuousReadingDays {\n  leetbookContinuousReadingDays\n}\n    ",e,r),t);ev.getKey=n=>void 0===n?["leetbookContinuousReadingDays"]:["leetbookContinuousReadingDays",n];let ef="\n    query leetbookLastReadBook {\n  leetbookLastReadBook {\n    ...leetbookBriefNode\n  }\n}\n    ".concat(no),eb=(n,e,t,r)=>(0,o.I)(void 0===e?["leetbookLastReadBook"]:["leetbookLastReadBook",e],i(n,ef,e,r),t);eb.getKey=n=>void 0===n?["leetbookLastReadBook"]:["leetbookLastReadBook",n];let ek="\n    query leetbookOwnedBooks($orderBy: OwnedBookOrderByFieldEnum, $page: Int, $pageSize: Int) {\n  leetbookOwnedBooks(orderBy: $orderBy, page: $page, pageSize: $pageSize) {\n    pageInfo {\n      total\n    }\n    data {\n      book {\n        ...leetbookBriefNode\n      }\n    }\n  }\n}\n    ".concat(no),eC=(n,e,t,r)=>(0,o.I)(void 0===e?["leetbookOwnedBooks"]:["leetbookOwnedBooks",e],i(n,ek,e,r),t);eC.getKey=n=>void 0===n?["leetbookOwnedBooks"]:["leetbookOwnedBooks",n];let eR=(n,e,t,r)=>(0,o.I)(["leetbookProgressDetail",e],i(n,"\n    query leetbookProgressDetail($bookSlug: String!) {\n  leetbookProgressDetail(bookSlug: $bookSlug) {\n    pageProgressList {\n      pageId\n      accessedAt\n    }\n  }\n}\n    ",e,r),t);eR.getKey=n=>["leetbookProgressDetail",n];let eU=(n,e,t)=>(0,r.n)(["contestEnterpriseWrittenExamBrowse"],e=>i(n,"\n    mutation contestEnterpriseWrittenExamBrowse($id: String!) {\n  contestEnterpriseWrittenExamBrowse(id: $id) {\n    ok\n  }\n}\n    ",e,t)(),e),eP=(n,e,t)=>(0,r.n)(["contestEnterpriseWrittenExamSubscription"],e=>i(n,"\n    mutation contestEnterpriseWrittenExamSubscription($id: String!) {\n  contestEnterpriseWrittenExamSubscription(id: $id) {\n    ok\n  }\n}\n    ",e,t)(),e),eN=(n,e,t)=>(0,r.n)(["contestEnterpriseWrittenExamRegister"],e=>i(n,"\n    mutation contestEnterpriseWrittenExamRegister($contestSlug: String!, $userInfo: JSONString!, $resumeUrl: String, $fileName: String) {\n  contestEnterpriseWrittenExamRegister(\n    contestSlug: $contestSlug\n    userInfo: $userInfo\n    resumeUrl: $resumeUrl\n    fileName: $fileName\n  ) {\n    ok\n  }\n}\n    ",e,t)(),e),eD=(n,e,t)=>(0,r.n)(["jobsSendPromotionSmsCode"],e=>i(n,"\n    mutation jobsSendPromotionSmsCode($countryCode: String!, $phone: String!) {\n  jobsSendPromotionSmsCode(countryCode: $countryCode, phone: $phone) {\n    ok\n  }\n}\n    ",e,t)(),e),eO=(n,e,t,r)=>(0,o.I)(void 0===e?["allSchoolInfoUrl"]:["allSchoolInfoUrl",e],i(n,"\n    query allSchoolInfoUrl {\n  allSchoolInfoUrl\n}\n    ",e,r),t);eO.getKey=n=>void 0===n?["allSchoolInfoUrl"]:["allSchoolInfoUrl",n];let eh=(n,e,t,r)=>(0,o.I)(["contestWrittenExamResult",e],i(n,"\n    query contestWrittenExamResult($contestSlug: String!) {\n  contestWrittenExamResult(contestSlug: $contestSlug) {\n    defeatRate\n    finishTime\n    score\n    timePenalty\n    isFinish\n  }\n}\n    ",e,r),t);eh.getKey=n=>["contestWrittenExamResult",n];let eL=(n,e,t,r)=>(0,o.I)(["contestEnterpriseWrittenExam",e],i(n,"\n    query contestEnterpriseWrittenExam($contestSlug: String!) {\n  contestEnterpriseWrittenExam(contestSlug: $contestSlug) {\n    title\n    startTime\n    duration\n    registered\n    company {\n      name\n      description\n      website\n      logo\n      id\n      jobsSlug\n      watermark\n    }\n    examLink\n    description\n    codeQuestionNum\n    quizQuestionNum\n    totalScore\n    status\n    writtenExamId\n  }\n}\n    ",e,r),t);eL.getKey=n=>["contestEnterpriseWrittenExam",n];let eM=(n,e,t,r)=>(0,o.I)(void 0===e?["simpleJobPostings"]:["simpleJobPostings",e],i(n,"\n    query simpleJobPostings($companySlug: String, $skip: Int, $first: Int, $showExpired: Boolean, $postingType: JobPostingTypeEnum) {\n  jobPostings(\n    companySlug: $companySlug\n    showExpired: $showExpired\n    skip: $skip\n    first: $first\n    postingType: $postingType\n  ) {\n    totalNum\n    edges {\n      node {\n        id\n        title\n        salaryMin\n        salaryMax\n        salaryNegotiable\n        educationDisplay\n        workExperienceDisplay\n        chinaCityDisplay\n      }\n    }\n  }\n}\n    ",e,r),t);eM.getKey=n=>void 0===n?["simpleJobPostings"]:["simpleJobPostings",n];let ew=(n,e,t,r)=>(0,o.I)(["favoriteDetailV2",e],i(n,"\n    query favoriteDetailV2($favoriteSlug: String!) {\n  favoriteDetailV2(favoriteSlug: $favoriteSlug) {\n    coverUrl\n    coverEmoji\n    coverBackgroundColor\n    description\n    creator {\n      realName\n      userAvatar\n      userSlug\n    }\n    hasCurrentQuestion\n    isPublicFavorite\n    lastQuestionAddedAt\n    name\n    questionNumber\n    slug\n    isDefaultList\n    favoriteType\n    lastModified: lastQuestionAddedAt\n    languageTagSlug\n    filtersInfo\n    sortByInfo\n    visibleFilters\n    collectCount\n    questType\n    questUnitIcon\n    questUnitColor\n    questIsPremium\n    questIsUnlocked\n    questSlug\n  }\n}\n    ",e,r),t);ew.getKey=n=>["favoriteDetailV2",n];let ex=(n,e,t,r)=>(0,o.I)(["isMyCollectedFavorite",e],i(n,"\n    query isMyCollectedFavorite($favoriteSlug: String!) {\n  isMyCollectedFavorite(favoriteSlug: $favoriteSlug)\n}\n    ",e,r),t);ex.getKey=n=>["isMyCollectedFavorite",n];let eB=(n,e,t,r)=>(0,o.I)(void 0===e?["myFavoriteList"]:["myFavoriteList",e],i(n,"\n    query myFavoriteList {\n  myCreatedFavoriteList {\n    favorites {\n      coverUrl\n      coverEmoji\n      coverBackgroundColor\n      hasCurrentQuestion\n      isPublicFavorite\n      lastQuestionAddedAt\n      name\n      slug\n      favoriteType\n    }\n    hasMore\n    totalLength\n  }\n  myCollectedFavoriteList {\n    hasMore\n    totalLength\n    favorites {\n      coverUrl\n      coverEmoji\n      coverBackgroundColor\n      hasCurrentQuestion\n      isPublicFavorite\n      name\n      slug\n      lastQuestionAddedAt\n      favoriteType\n    }\n  }\n}\n    ",e,r),t);eB.getKey=n=>void 0===n?["myFavoriteList"]:["myFavoriteList",n];let eF=(n,e,t,r)=>(0,o.I)(void 0===e?["questionTopicTags"]:["questionTopicTags",e],i(n,"\n    query questionTopicTags {\n  questionTopicTags {\n    edges {\n      node {\n        id\n        name\n        slug\n        translatedName\n        questionIds\n      }\n    }\n  }\n}\n    ",e,r),t);eF.getKey=n=>void 0===n?["questionTopicTags"]:["questionTopicTags",n];let eq=(n,e,t)=>(0,r.n)(["followUser"],e=>i(n,"\n    mutation followUser($userSlug: String!) {\n  followUserResult: followUser(userSlug: $userSlug) {\n    ok\n    error\n  }\n}\n    ",e,t)(),e),e_=(n,e,t)=>(0,r.n)(["unfollowUser"],e=>i(n,"\n    mutation unfollowUser($userSlug: String!) {\n  followUserResult: unfollowUser(userSlug: $userSlug) {\n    ok\n    error\n  }\n}\n    ",e,t)(),e),ej=(n,e,t,r)=>(0,o.I)(["userProfilePendants",e],i(n,"\n    query userProfilePendants($slugs: [String]!) {\n  userProfileUserPendants(userSlugs: $slugs) {\n    config {\n      iconWearing\n    }\n    id\n    category\n    name\n  }\n  userProfileUserColors(userSlugs: $slugs)\n}\n    ",e,r),t);ej.getKey=n=>["userProfilePendants",n];let eK=(n,e,t,r)=>(0,o.I)(void 0===e?["userProfilePhone"]:["userProfilePhone",e],i(n,"\n    query userProfilePhone {\n  user {\n    countryCode\n    phone\n  }\n}\n    ",e,r),t);eK.getKey=n=>void 0===n?["userProfilePhone"]:["userProfilePhone",n];let eW=(n,e,t,r)=>(0,o.I)(["userProfilePublicProfile",e],i(n,"\n    query userProfilePublicProfile($userSlug: String!) {\n  userProfilePublicProfile(userSlug: $userSlug) {\n    haveFollowed\n    siteRanking\n    profile {\n      userSlug\n      realName\n      aboutMe\n      asciiCode\n      userAvatar\n      gender\n      websites\n      skillTags\n      ipRegion\n      birthday\n      location\n      useDefaultAvatar\n      certificationLevel\n      github\n      school: schoolV2 {\n        schoolId\n        logo\n        name\n      }\n      company: companyV2 {\n        id\n        logo\n        name\n      }\n      job\n      globalLocation {\n        country\n        province\n        city\n        overseasCity\n      }\n      socialAccounts {\n        provider\n        profileUrl\n      }\n      skillSet {\n        langLevels {\n          langName\n          langVerboseName\n          level\n        }\n        topics {\n          slug\n          name\n          translatedName\n        }\n        topicAreaScores {\n          score\n          topicArea {\n            name\n            slug\n          }\n        }\n      }\n    }\n    educationRecordList {\n      unverifiedOrganizationName\n    }\n    occupationRecordList {\n      unverifiedOrganizationName\n      jobTitle\n    }\n  }\n}\n    ",e,r),t);eW.getKey=n=>["userProfilePublicProfile",n];let eJ=(n,e,t)=>(0,r.n)(["managementAddOrEditContestSurvey"],e=>i(n,"\n    mutation managementAddOrEditContestSurvey($id: ID, $data: ManagementAddOrEditContestSurveyInput!) {\n  managementAddOrEditContestSurvey(id: $id, data: $data) {\n    ok\n  }\n}\n    ",e,t)(),e),eV=(n,e,t,r)=>(0,o.I)(["managementAllContestSurveys",e],i(n,"\n    query managementAllContestSurveys($allData: managementAllContestSurveysInput!) {\n  managementAllContestSurveys(data: $allData) {\n    id\n    title\n    company {\n      id\n      name\n      nameTranslated\n    }\n    questionConfigs\n    submitCount\n    validStart\n    validEnd\n    createdAt\n    modifiedAt\n    skipContent\n    submitContent\n  }\n}\n    ",e,r),t);eV.getKey=n=>["managementAllContestSurveys",n];let eH=(n,e,t,r)=>(0,o.I)(["managementContestSurvey",e],i(n,"\n    query managementContestSurvey($surveyId: Int!) {\n  managementContestSurvey(surveyId: $surveyId) {\n    id\n    title\n    company {\n      id\n      name\n      nameTranslated\n    }\n    questionConfigs\n    submitCount\n    validStart\n    validEnd\n    createdAt\n    modifiedAt\n    skipContent\n    submitContent\n  }\n}\n    ",e,r),t);eH.getKey=n=>["managementContestSurvey",n];let eQ=(n,e,t,r)=>(0,o.I)(["managementContestSurveyAdminLogs",e],i(n,"\n    query managementContestSurveyAdminLogs($limit: Int!, $skip: Int!, $surveyId: Int!) {\n  managementContestSurveyAdminLogs(\n    limit: $limit\n    skip: $skip\n    surveyId: $surveyId\n  ) {\n    operationType\n    operateUserName\n    createdAt\n  }\n}\n    ",e,r),t);eQ.getKey=n=>["managementContestSurveyAdminLogs",n];let eG=(n,e,t)=>(0,r.n)(["managementExportContestSurveyAnswers"],e=>i(n,"\n    mutation managementExportContestSurveyAnswers($surveyId: ID!) {\n  managementExportContestSurveyAnswers(surveyId: $surveyId) {\n    taskId\n  }\n}\n    ",e,t)(),e),eY="\n    mutation hitResource($entityId: ID!, $entityType: EntityType!) {\n  hitResource(entityId: $entityId, entityType: $entityType) {\n    ok\n    error\n  }\n}\n    "}}]);